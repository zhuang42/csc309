{"version":3,"sources":["serviceWorker.js","components/SignIn.js","components/GenderRadioButtons.js","components/SignUp.js","components/MainGame.js","components/Profile.js","components/SnackBar.js","socket.js","model.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userid","password","handleSubmit","bind","assertThisInitialized","$","hide","event","_this2","preventDefault","data","FormData","target","sdata","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","pair","value","console","log","err","return","setState","prevState","default_state","get","axios","post","then","res","switchToMainGame","clientGameSocket","send","currentUser","setUserid","setPassword","getUserInfo","handleInfo","catch","error","handleError","response","classes","react_default","a","createElement","className","main","CssBaseline_default","Paper_default","paper","Button_default","onClick","switchToLogin","color","switchToSignUp","Avatar_default","avatar","Typography_default","component","variant","form","onSubmit","FormControl_default","margin","required","fullWidth","InputLabel_default","htmlFor","Input_default","id","name","autoFocus","type","submit","React","Component","withStyles","theme","root","flexGrow","defineProperty","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","marginTop","flexDirection","alignItems","padding","concat","backgroundColor","palette","secondary","GenderRadioButtons","handleChange","formControl","FormLabel_default","RadioGroup_default","row","aria-label","group","onChange","FormControlLabel_default","control","Radio_default","label","SignUp","conpassworderror","conpasswordmessage","username","gender","birthday","FormHelperText_default","components_GenderRadioButtons","shrink","MainGame","handleStartNewGame","handleLogoutButton","show","info","clear","Grid_default","container","justify","item","xs","button","switchToProfile","input","center","justifyContent","Profile","handleProfileSubmit","handlePasswordSubmit","handleDeleteUser","put","_this3","newpassword","conpassword","_this4","confirm","delete","TextField_default","textField","InputProps","readOnly","achievement","kill","damage","defaultValue","buttonback","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","green","dark","primary","amber","icon","fontSize","iconVariant","opacity","message","onClose","other","objectWithoutProperties","Icon","SnackbarContent_default","assign","classNames","aria-describedby","action","IconButton_default","key","close","Close_default","gameSocket","url","socket","Promise","resolve","reject","server","WebSocket","onopen","onerror","actors","connect","onclose","alert","onmessage","JSON","parse","e","validateServerGameSocketMessage","game","world","clearWorld","addServerActors","_context","t0","operation","dummyevent","jso","json","stringify","getTouchPos","canvas","evt","rect","getBoundingClientRect","x","clientX","y","clientY","Rectangle","height","right","bottom","r","Circle","radius","distance","Math","sqrt","collisionDetector","act1","act2","shape1","shape","shape2","set","position","overlaps","circleRectOverlaps","circle","rect_x","rect_y","circleDistance_x","abs","circleDistance_y","pow","backGround","BGColour","BGCorlor","image","ctx","saved_width","saved_height","fillStyle","fillRect","rows","columns","i","beginPath","j","blockSize","fill","closePath","Image","src","toDataURL","x_off","y_off","dWidth","dHeight","sWidth","sHeight","drawImage","Game","FPS","INTERVAL","STEP","World","WORLD_WIDTH","WORLD_HEIGHT","background","generate","getContext","viewport","Viewport","gameMainLoopRequestid","mainPlayer","addEventListener","resizeCanvas","innerWidth","innerHeight","player","addPlayer","follow","update","draw","xView","yView","step","requestAnimationFrame","loop","cancelAnimationFrame","keyCode","c","getMousePos","player_x","player_y","abs_x","abs_y","direction","Pair","touch","touches","tapedTwice","round","setTimeout","tapHandler","length","dummyevent2","DeviceMotionEvent","left","down","ondevicemotion","agx","accelerationIncludingGravity","agy","ax","acceleration","ay","az","z","images","crate","document","getElementById","goldenCrate","house","mansion","stone1","stone2","bed","tree1","bush1","toilet","playerCount","serverActors","unsetMainPlayer","acts","server_actor","Floor","colour","addActor","Projectile_556","Projectile_762","Projectile_shotGunShell","Ammo_556","Ammo_762","Ammo_shotGunShell","Weapon_AK47","Weapon_M416","Weapon_S686","Player","speed","changeDirection","inventory","healthPoint","curr_weapon","w","Weapon","ammo","max_ammo","setMainPlayer","circleWall","rectWall","Crate","Stone","Tree","Bush","Bed","Toilet","House","detectPlayer","Mansion","removeActor","actor","constructor","push","index","indexOf","splice","steps","cwidth","cheight","clearRect","save","restore","hud","wwidth","wheight","world_width","world_height","_followed","vpRect","worldRect","followed","act_x","act_y","View_width","View_height","within","m","magnitude","p","Actor","translate","arc","PI","Control","_left","_up","_right","_down","_fire","controls","weapon1","weapon2","maxHealthPoint","playerHUD","stats","playerGameStats","ams","getActorApproByType","ammos","addAmmo","ws","weapons","assignWeapon","ammo_ojb","ammo_type","int","weapon","owner","ammo_num","reload","fire","normalize","dmg","cx","cy","ex","ey","dy","dx","atan2","angle","font","fillText","strokeStyle","lineWidth","rotate","stroke","drawWeapon","drawAmmoHud","drawHeathBarHud","drawInventoryHud","drawMiniMap","canvas_width","num_item","classnameToName","canvas_height","healthBarwidth","toStringHealthPoint","toString","toAmmo","getPlayerNum","damageTaken","damageDone","killList","killed","Nonitem","Item","_this8","firerate","range","_this9","readytofire","Projectile","direction_position","_this10","prototype","Ammo","_this11","s","Wall","_this12","_this13","_this14","damageableCircle","max_hp","_this15","original_shape","_this16","_this17","_this18","damageableRect","_this19","_this20","_this21","_this22","_this23","Building","_this24","wall_width","narrowDetection","_this25","_this26","_this27","User","hasOwnProperty","App","errorMessage","infoMessage","ip","port","parseInt","registerEvent","setPlayerEventListener","start","handleErrorClose","handleInfoClose","getUserAchievement","getTop10Kill","setInfo","setAchievement","errorbar","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","SnackBar","infobar","components_SignIn","components_SignUp","components_MainGame","components_Profile","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15e31835.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nimport axios from 'axios';\nimport $ from \"jquery\";\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n\n\n});\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userid: \"\",\n            password: \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        $(\"#stage\").hide();\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const data = new FormData(event.target);\n        const sdata = {};\n\n        for (var pair of data.entries()) {\n            console.log(pair[0] + ', ' + pair[1]);\n        }\n\n        this.setState((prevState, props) => {\n            return this.default_state;\n        });\n\n\n        sdata.userid = data.get('userid');\n        sdata.password = data.get('password');\n\n        axios.post(\"/api/user/login\", sdata).then(\n            (res) => {\n                this.props.switchToMainGame();\n                this.props.clientGameSocket.send('login', sdata.userid);\n                this.props.currentUser.setUserid(sdata.userid);\n                this.props.currentUser.setPassword(sdata.password);\n\n                this.props.getUserInfo(sdata.userid);\n                this.props.handleInfo(\"Welcome Back \" + sdata.userid);\n            }\n        ).catch((error) => {\n            this.props.handleError(error.response.data.error);\n        });\n\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <main className={classes.main}>\n\n                <CssBaseline/>\n                <Paper className={classes.paper}>\n                    <div>\n                        <Button\n                            onClick={this.props.switchToLogin}\n\n                            color={\"primary\"}\n                        >Log\n                            In </Button>\n\n                        <Button\n                            onClick={this.props.switchToSignUp}>Register</Button>\n                    </div>\n\n\n                    <Avatar className={classes.avatar}>\n                        JO\n                    </Avatar>\n\n                    <Typography component=\"h2\" variant=\"h5\">\n                        JoJo's Royale Battle\n                    </Typography>\n\n                    <form className={classes.form} onSubmit={this.handleSubmit}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"userid\">User ID</InputLabel>\n                            <Input id=\"userid\" name=\"userid\" autoFocus/>\n\n                        </FormControl>\n\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input name=\"password\" type=\"password\" id=\"password\"/>\n                        </FormControl>\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n                    </form>\n\n                </Paper>\n\n\n            </main>\n        );\n    }\n}\n\n\nSignIn.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst styles = theme => ({\n\n    formControl: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 2,\n    },\n    group: {\n        margin: 0,\n    },\n});\n\nclass GenderRadioButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.state,\n        };\n\n    }\n\n\n    handleChange = event => {\n        this.setState({value: event.target.value});\n    };\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n                <FormLabel component=\"legend\">Gender</FormLabel>\n                <RadioGroup\n                    row\n                    aria-label=\"Gender\"\n                    name=\"gender\"\n                    className={classes.group}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                >\n                    <FormControlLabel value=\"Female\" control={<Radio/>} label=\"Female\"/>\n                    <FormControlLabel value=\"Male\" control={<Radio/>} label=\"Male\"/>\n                    <FormControlLabel value=\"Unknown\" control={<Radio/>} label=\"Other\"/>\n                </RadioGroup>\n            </FormControl>\n        );\n    }\n}\n\nGenderRadioButtons.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GenderRadioButtons);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport GenderRadioButtons from \"./GenderRadioButtons\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport axios from \"axios\";\nimport $ from \"jquery\";\n\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n\n\n});\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.default_state = {\n            conpassworderror: false,\n            conpasswordmessage: \"\",\n        }\n\n        this.state = {\n            conpassworderror: false,\n            conpasswordmessage: \"\"\n        }\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        $(\"#stage\").hide();\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const data = new FormData(event.target);\n        let sdata = {};\n\n\n        this.setState((prevState, props) => {\n\n            return this.default_state;\n        });\n\n\n        if (data.get('conpassword') !== data.get('password')) {\n            this.setState((prevState, props) => {\n\n                return {conpassworderror: true, conpasswordmessage: \"Password Mismatch\"};\n            });\n            return;\n        }\n\n\n        sdata.userid = data.get('userid');\n        sdata.password = data.get('password');\n        sdata.username = data.get('username');\n        sdata.gender = data.get('gender');\n        sdata.birthday = data.get('birthday');\n\n\n        axios.post(\"/api/user/create\", sdata).then(\n            (res) => {\n                this.props.switchToMainGame();\n                this.props.clientGameSocket.send('login', sdata.userid);\n                this.props.currentUser.setUserid(sdata.userid);\n                this.props.currentUser.setPassword(sdata.password);\n                this.props.getUserInfo(sdata.userid);\n                this.props.handleInfo(\"User successfully created\");\n                // getUserAchievement();\n            }\n        ).catch((error) => {\n            this.props.handleError(error.response.data.error);\n        });\n\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <main className={classes.main}>\n                <CssBaseline/>\n                <Paper className={classes.paper}>\n\n                    <div>\n                        <Button onClick={this.props.switchToLogin}>Log In</Button>\n\n                        <Button\n                            onClick={this.props.switchToSignUp}\n\n                            color={\"primary\"}\n\n                        >Register</Button>\n                    </div>\n\n\n                    <Avatar className={classes.avatar}>\n                        JO\n                    </Avatar>\n\n\n                    <Typography component=\"h2\" variant=\"h5\">\n                        JoJo's Royale Battle\n                    </Typography>\n\n                    <form className={classes.form} onSubmit={this.handleSubmit}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"userid\">User ID</InputLabel>\n                            <Input id=\"userid\" name=\"userid\" autoFocus/>\n\n                        </FormControl>\n\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"username\">User Name</InputLabel>\n                            <Input name=\"username\" id=\"username\"/>\n                        </FormControl>\n\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input name=\"password\" type=\"password\" id=\"password\"/>\n                        </FormControl>\n\n\n                        <FormControl margin=\"normal\" required fullWidth error={this.state.conpassworderror}>\n                            <InputLabel htmlFor=\"conpassword\">Confirm Password</InputLabel>\n                            <Input name=\"conpassword\" type=\"password\" id=\"conpassword\"/>\n                            <FormHelperText>{this.state.conpasswordmessage}</FormHelperText>\n                        </FormControl>\n\n                        <GenderRadioButtons/>\n\n\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"date\" required={true} shrink={true}>Birthday</InputLabel>\n                            <Input name=\"birthday\" type=\"date\" id=\"birthday\"/>\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n                        </Button>\n                    </form>\n                </Paper>\n            </main>\n        );\n    }\n}\n\n\nSignUp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignUp);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport $ from \"jquery\";\n\n\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n\n\n    button: {\n        margin: theme.spacing.unit,\n    },\n    input: {\n        display: 'none',\n    },\n\n    center: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n\n});\n\n\nclass MainGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.currentUser = this.props.currentUser;\n        this.clientGameSocket = this.props.clientGameSocket;\n\n        this.handleStartNewGame = this.handleStartNewGame.bind(this);\n        this.handleLogoutButton = this.handleLogoutButton.bind(this);\n        $(\"#stage\").show();\n\n    }\n\n    handleStartNewGame() {\n        console.log(\"start\", this.currentUser.info.userid);\n        this.clientGameSocket.send(\"start\", this.currentUser.info.userid);\n    }\n\n    handleLogoutButton() {\n        this.props.handleInfo(\"Logout successful \" + this.currentUser.info.userid);\n        this.clientGameSocket.send(\"logout\", this.currentUser.info.userid);\n        this.currentUser.clear();\n        this.props.switchToLogin();\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <Grid container className={classes.root}\n                      spacing={24}\n                      alignItems=\"center\"\n                      justify=\"center\"\n                >\n                    <Grid item xs={4}>\n                        <Button className={classes.button}\n                                variant=\"contained\"\n                                onClick={this.handleStartNewGame}\n                                fullWidth>START\n                        </Button>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Button className={classes.button} variant=\"contained\"\n                                onClick={this.props.switchToProfile}\n\n                                fullWidth> PROFILE</Button>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Button className={classes.button} variant=\"contained\" onClick={this.handleLogoutButton}\n                                fullWidth>LOG\n                            OUT</Button>\n                    </Grid>\n                </Grid>\n\n\n            </div>\n\n        );\n    }\n}\n\n\nMainGame.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MainGame);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport GenderRadioButtons from \"./GenderRadioButtons\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n\n    textField: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n\n    button: {\n        display: \"flex\"\n    },\n\n    buttonback: {\n        marginTop: theme.spacing.unit * 2,\n        display: \"flex\"\n    },\n    root: {\n        marginTop: theme.spacing.unit * 2,\n    }\n\n\n});\n\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.default_state = {\n            conpassworderror: false,\n            conpasswordmessage: \"\",\n        }\n\n        this.state = {\n            conpassworderror: false,\n            conpasswordmessage: \"\"\n        }\n        this.handleProfileSubmit = this.handleProfileSubmit.bind(this);\n        this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n        this.handleDeleteUser = this.handleDeleteUser.bind(this);\n        $(\"#stage\").hide();\n    }\n\n    handleProfileSubmit(event) {\n        event.preventDefault();\n        const data = new FormData(event.target);\n        const sdata = {};\n        //\n        // for (var pair of data.entries())\n        // {\n        //     console.log(pair[0]+ ', '+ pair[1]);\n        // }\n\n        sdata.userid = this.props.currentUser.info.userid;\n        sdata.password = this.props.currentUser.info.password;\n        sdata.username = data.get('username');\n        sdata.gender = data.get('gender');\n        sdata.birthday = data.get('birthday');\n\n\n        axios.put(\"/api/user/\" + sdata.userid, sdata).then(\n            (res) => {\n                this.props.getUserInfo(sdata.userid);\n                this.props.handleInfo(\"User Profile Updated Success\");\n\n            }\n        ).catch((error) => {\n            this.props.handleError(error.response.data.error);\n        });\n\n    }\n\n\n    handlePasswordSubmit(event) {\n        event.preventDefault();\n        const data = new FormData(event.target);\n        const sdata = {};\n\n        let userid = this.props.currentUser.info.userid;\n        let password = this.props.currentUser.info.password;\n\n\n        let newpassword = data.get('password');\n        let conpassword = data.get('conpassword');\n\n\n        this.setState((prevState, props) => {\n\n            return this.default_state;\n        });\n\n\n        if (newpassword !== conpassword) {\n            this.setState((prevState, props) => {\n                return {conpassworderror: true, conpasswordmessage: \"Password Mismatch\"};\n            });\n            return;\n        }\n\n\n        // var putData = {};\n        sdata[\"password\"] = password;\n        sdata[\"newpassword\"] = newpassword;\n\n\n        axios.put(\"/api/user/password/\" + userid, sdata).then(\n            (res) => {\n\n                this.props.handleInfo(\"Password Updated Success\");\n                this.props.currentUser.setPassword(newpassword);\n\n            }\n        ).catch((error) => {\n            this.props.handleError(error.response.data.error);\n        });\n\n    }\n\n\n    handleDeleteUser() {\n        let r = window.confirm(\"You can not recover your account after deletion, click confirm to proceed\");\n        if (r === true) {\n        } else {\n            return;\n        }\n\n        let userid = this.props.currentUser.info.userid;\n        let password = this.props.currentUser.info.password;\n\n        let sdata = {};\n        sdata['password'] = password;\n\n        axios.delete(\"/api/user/\" + userid, {data: sdata}).then(\n            (res) => {\n                this.props.handleInfo(\"User \" + userid + \" Deleted\");\n                this.props.currentUser.clear();\n                this.props.switchToLogin();\n            }\n        ).catch((error) => {\n            this.props.handleError(\"User deletion failed\");\n        });\n\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <main className={classes.main}>\n                <CssBaseline/>\n                <Paper className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h4\">\n                        Welcome Back, {this.props.currentUser.info.username}\n                    </Typography>\n\n\n                    <Typography className={classes.root} component=\"h1\" variant=\"h5\">\n                        Achievement\n                    </Typography>\n\n\n                    <Grid container className={classes.root} spacing={16}>\n                        <Grid item xs={4}>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"User ID\"\n                                className={classes.textField}\n                                value={this.props.currentUser.info.userid}\n                                margin=\"normal\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TextField\n                                id=\"outlined-kill\"\n                                label=\"KILL\"\n                                className={classes.textField}\n                                value={this.props.currentUser.achievement.kill}\n                                margin=\"normal\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={4}>\n                            <TextField\n                                id=\"outlined-damage\"\n                                label=\"DAMAGE\"\n                                className={classes.textField}\n                                value={this.props.currentUser.achievement.damage}\n                                margin=\"normal\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                    <form className={classes.form} onSubmit={this.handleProfileSubmit}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"username\">User Name</InputLabel>\n                            <Input name=\"username\" id=\"username\" defaultValue={this.props.currentUser.info.username}/>\n                        </FormControl>\n\n\n                        <GenderRadioButtons state={this.props.currentUser.info.gender}/>\n\n\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"date\" required={true} shrink={true}>Birthday</InputLabel>\n                            <Input name=\"birthday\" type=\"date\" id=\"birthday\"\n                                   defaultValue={this.props.currentUser.info.birthday}/>\n                        </FormControl>\n\n\n                        <div>\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                CHANGE PROFILE\n                            </Button>\n                        </div>\n\n                    </form>\n\n\n                    <form className={classes.form} onSubmit={this.handlePasswordSubmit}>\n\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input name=\"password\" type=\"password\" id=\"password\"/>\n                        </FormControl>\n\n\n                        <FormControl margin=\"normal\" required fullWidth error={this.state.conpassworderror}>\n                            <InputLabel htmlFor=\"conpassword\">Confirm Password</InputLabel>\n                            <Input name=\"conpassword\" type=\"password\" id=\"conpassword\"/>\n                            <FormHelperText>{this.state.conpasswordmessage}</FormHelperText>\n                        </FormControl>\n\n                        <Grid container className={classes.root}\n                              spacing={24}\n                              alignItems=\"center\"\n                              justify=\"center\"\n                        >\n                            <Grid item xs={6}\n\n                                  alignItems=\"center\"\n                                  justify=\"center\">\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                    className={classes.button}\n\n                                >\n                                    CHANGE\n                                </Button>\n                            </Grid>\n                            <Grid item xs={6}\n                                  alignItems=\"center\"\n                                  justify=\"center\">\n                                <Button className={classes.button}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        fullWidth\n                                        onClick={this.handleDeleteUser}\n                                > DELETE USER\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                    <Button className={classes.buttonback} onClick={this.props.switchToMainGame}>BACK TO GAME</Button>\n\n                </Paper>\n            </main>\n        );\n    }\n}\n\n\nProfile.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Profile);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const {classes, className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)}/>\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon}/>\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles1)(MySnackbarContent);","class gameSocket {\n    constructor(url) {\n        this.url = url;\n        this.socket = null;\n\n    }\n\n    connect() {\n        return new Promise((resolve, reject) => {\n            var server = new WebSocket(this.url);\n            server.onopen = function () {\n                resolve(server);\n            };\n            server.onerror = function (err) {\n                reject(err);\n            };\n\n        });\n    }\n\n\n    validateServerGameSocketMessage(data) {\n        if (data.actors) {\n\n            return true;\n        }\n\n\n        return false;\n\n    }\n\n    async registerEvent() {\n        try {\n            this.socket = await this.connect();\n\n\n            this.socket.onopen = function (event) {\n                //$('#sendButton').removeAttr('disabled');\n                console.log(\"CLIENT: connected\");\n            };\n            this.socket.onclose = function (event) {\n                alert(\"Unable to connect to game server, try again later.\");\n            };\n            this.socket.onmessage = (event) => {\n\n                try {\n                    var message = JSON.parse(event.data);\n                } catch (e) {\n                }\n                if (!this.validateServerGameSocketMessage(message)) {\n                    console.log(\"validateServerGameSocketMessage error\");\n                    return;\n                }\n\n                if (this.game && this.currentUser) {\n                    this.game.world.clearWorld();\n                    this.game.world.addServerActors(message.actors, this.currentUser.info.userid);\n                }\n            }\n        } catch (error) {\n            console.log(\"oops \", error)\n        }\n    }\n\n    send(operation, userid, dummyevent) {\n\n        let jso = {\n            'operation': operation,\n            'userid': userid,\n            'event': dummyevent\n        };\n\n        let json = JSON.stringify(jso);\n        this.socket.send(json);\n    }\n}\n\nexport default gameSocket;","/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/** Convert an vector to angle (raduis)*/\nfunction angle(cx, cy, ex, ey) {\n    var dy = ey - cy;\n    var dx = ex - cx;\n    var rad = Math.atan2(dy, dx); // range (-PI, PI]\n    return rad;\n}\n\n/**Get relative mouse position*/\nfunction getMousePos(canvas, evt) {\n    var rect = canvas.getBoundingClientRect();\n    return {\n        x: evt.clientX - rect.x,\n        y: evt.clientY - rect.y\n    };\n}\n\nfunction getTouchPos(canvas, evt) {\n    var rect = canvas.getBoundingClientRect();\n    return {\n        x: evt.clientX - rect.x,\n        y: evt.clientY - rect.y\n    };\n}\n\n\n/** Two main shapes used in collision detection*/\nclass Rectangle {\n    constructor(x, y, width, height) {\n        this.x = x || 0;\n        this.y = y || 0;\n        this.width = width || 0;\n        this.height = height || 0;\n        this.right = this.x + this.width;\n        this.bottom = this.y + this.height;\n    }\n\n    set(x, y, /*optional*/ width, /*optional*/ height) {\n        this.x = x;\n        this.y = y;\n        this.width = width || this.width;\n        this.height = height || this.height;\n        this.right = (this.x + this.width);\n        this.bottom = (this.y + this.height);\n    }\n\n    within(r) {\n        return (r.x <= this.x &&\n            r.right >= this.right &&\n            r.y <= this.y &&\n            r.bottom >= this.bottom);\n    }\n\n    overlaps(r) {\n        return (this.x < r.right &&\n            r.x < this.right &&\n            this.y < r.bottom &&\n            r.y < this.bottom);\n    }\n}\n\nclass Circle {\n    constructor(x, y, radius) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n    }\n\n    set(x, y, /*optional*/ radius) {\n\n        this.x = x;\n        this.y = y;\n        this.radius = radius || this.radius;\n    }\n\n    //Not used\n    within(r) {\n        // let distance = Math.sqrt((this.x - r.x) * (this.x - r.x) +\n        //     (this.y - r.y) * (this.y - r.y));\n        //\n        // throw 'Not implemented';\n    }\n\n    overlaps(r) {\n\n        let distance = Math.sqrt((this.x - r.x) * (this.x - r.x) +\n            (this.y - r.y) * (this.y - r.y));\n\n        return r.radius + this.radius > distance;\n\n    }\n\n}\n\nclass collisionDetector {\n    //This class provide convenient way to detect if two actor collision.\n    //To substitute handy way detection implementation.\n    //To use collision Detector, each Actor must have attribute shape.\n    //Failed to have shape attr will throw error.\n\n\n    broadDetection(act1, act2) {\n        //TODO. To Speed up collision detection\n    }\n\n    narrowDetection(act1, act2) {\n        let shape1 = act1.shape;\n        let shape2 = act2.shape;\n\n        shape1.set(act1.position.x, act1.position.y);\n        shape2.set(act2.position.x, act2.position.y);\n\n        if (shape1 instanceof Circle && shape2 instanceof Circle) {\n            return shape1.overlaps(shape2);\n        } else if (shape1 instanceof Rectangle && shape2 instanceof Rectangle) {\n            return shape1.overlaps(shape2);\n        }\n\n        if (shape1 instanceof Circle && shape2 instanceof Rectangle) {\n            return this.circleRectOverlaps(shape1, shape2);\n        } else if (shape1 instanceof Rectangle && shape2 instanceof Circle) {\n            return this.circleRectOverlaps(shape2, shape1);\n        }\n    }\n\n    //https://stackoverflow.com/questions/401847/circle-rectangle-collision-detection-intersection\n    circleRectOverlaps(circle, rect) {\n        let rect_x = rect.x + rect.width / 2;\n        let rect_y = rect.y + rect.height / 2\n\n        let circleDistance_x = Math.abs(circle.x - rect_x);\n        let circleDistance_y = Math.abs(circle.y - rect_y);\n\n        if (circleDistance_x > (rect.width / 2 + circle.radius)) {\n            return false;\n        }\n        if (circleDistance_y > (rect.height / 2 + circle.radius)) {\n            return false;\n        }\n\n        if (circleDistance_x < (rect.width / 2)) {\n            return true;\n        }\n        if (circleDistance_y < (rect.height / 2)) {\n            return true;\n        }\n\n        let cornerDistance_sq = Math.pow(circleDistance_x - rect.width / 2, 2) +\n            Math.pow(circleDistance_y - rect.height / 2, 2);\n\n        return (cornerDistance_sq < Math.pow(circle.radius, 2));\n    }\n\n}\n\nclass backGround {\n    constructor(BGColour, width, height) {\n        this.BGCorlor = BGColour;\n        this.width = width;\n        this.height = height;\n        this.image = null;\n\n    }\n\n    generate(ctx) {\n        let saved_width = ctx.canvas.width;\n        let saved_height = ctx.canvas.height;\n        ctx.canvas.width = this.width;\n        ctx.canvas.height = this.height;\n\n        ctx.fillStyle = 'rgba(109,149,62, 0.5)';\n        ctx.fillRect(0, 0, this.width, this.height);\n\n        let blockSize = 400;\n        var rows = ~~(this.width / blockSize) + 1;\n        var columns = ~~(this.height / blockSize) + 1;\n        var color = this.BGCorlor;\n\n        ctx.fillStyle = color;\n        for (let x = 0, i = 0; i < rows; x += blockSize, i++) {\n            ctx.beginPath();\n            for (let y = 0, j = 0; j < columns; y += blockSize, j++) {\n                ctx.rect(x, y, blockSize * 0.99, blockSize * 0.99);\n            }\n            ctx.fill();\n            ctx.closePath();\n        }\n\n        // store the generate map as this image texture\n        this.image = new Image();\n        this.image.src = ctx.canvas.toDataURL(\"image/png\");\n        // clear context\n\n        ctx.canvas.width = saved_width;\n        ctx.canvas.height = saved_height;\n        ctx = null;\n\n    }\n\n    draw(ctx, x_off, y_off) {\n        var dx, dy;\n        var dWidth, dHeight;\n\n        let sWidth = ctx.canvas.width;\n        let sHeight = ctx.canvas.height;\n\n        dx = 0;\n        dy = 0;\n\n        dWidth = sWidth;\n        dHeight = sHeight;\n\n        ctx.drawImage(this.image, x_off, y_off, sWidth, sHeight, dx, dy, dWidth, dHeight);\n\n    }\n\n}\n\n//Since change to requestAnimationFrame. FPS does not used\n//The main game object, store who is main player, setting up view port\nclass Game {\n    constructor(canvas, currentUser, clientGameSocket) {\n        this.canvas = canvas;\n        this.FPS = 60;\n        this.INTERVAL = 1000 / this.FPS; // milliseconds\n        this.STEP = this.INTERVAL / 1000; // seconds\n        this.world = new World(WORLD_WIDTH, WORLD_HEIGHT);\n        this.world.game = this;\n        this.world.background.generate(this.canvas.getContext('2d'));\n        this.viewport = new Viewport(canvas, 0, 0, WORLD_WIDTH, WORLD_HEIGHT);\n        this.gameMainLoopRequestid = null;\n        this.mainPlayer = null;\n        this.currentUser = currentUser;\n        this.clientGameSocket = clientGameSocket;\n\n\n        if (this.canvas.getContext) {\n            window.addEventListener('resize', () => {\n                this.resizeCanvas()\n            }, false);\n            window.addEventListener('orientationchange', () => {\n                this.resizeCanvas()\n            }, false);\n        }\n        this.resizeCanvas();\n    }\n\n\n    resizeCanvas() {\n        this.canvas.width = window.innerWidth - 50;\n        this.canvas.height = window.innerHeight - 70;\n    }\n\n\n    //Add main player int canvas\n    //setting up viewport\n    setMainPlayer(player) {\n        this.world.addPlayer(player);\n        this.viewport.follow(player);\n        this.mainPlayer = player;\n    }\n\n    unsetMainPlayer() {\n        this.viewport.follow(null);\n        this.mainPlayer = null;\n    }\n\n    //The game takes one step, tell world take one step\n    step() {\n        this.resizeCanvas();\n        this.viewport.update();\n    }\n\n    //pass context to world to draw\n    draw() {\n        let ctx = this.canvas.getContext('2d');\n        this.world.draw(ctx, this.viewport.xView, this.viewport.yView);\n    }\n\n    loop() {\n        this.step();\n        this.draw();\n        //New feature\n        this.gameMainLoopRequestid = requestAnimationFrame(() => {\n            this.loop()\n        });\n    }\n\n    start() {\n        this.loop();\n    }\n\n\n    //The end of game\n    end() {\n        cancelAnimationFrame(\n            this.gameMainLoopRequestid);\n        this.gameMainLoopRequestid = null;\n        this.draw();\n    }\n\n    setPlayerEventListener() {\n        window.addEventListener(\"keydown\", (event) => {\n\n            let id = this.currentUser.info.userid;\n\n            let dummyevent = {};\n            dummyevent.type = \"keydown\";\n            dummyevent.keyCode = event.keyCode;\n\n            if (id) {\n                this.clientGameSocket.send(\"event\", id, dummyevent);\n            }\n\n        });\n\n        window.addEventListener(\"keyup\", (event) => {\n\n            let id = this.currentUser.info.userid;\n\n            let dummyevent = {};\n            dummyevent.type = \"keyup\";\n            dummyevent.keyCode = event.keyCode;\n\n            if (id) {\n                this.clientGameSocket.send(\"event\", id, dummyevent);\n            }\n\n        });\n\n        this.canvas.addEventListener(\"mousemove\", (event) => {\n\n            let id = this.currentUser.info.userid;\n            let player = this.mainPlayer;\n\n            if (!id || !player) {\n                return;\n            }\n            let c = getMousePos(this.canvas, event);\n\n            let player_x = this.mainPlayer.position.x;\n            let player_y = this.mainPlayer.position.y;\n\n            let abs_x = c.x + this.viewport.xView;\n            let abs_y = c.y + this.viewport.yView;\n\n            let direction = new Pair(abs_x - player_x, abs_y - player_y);\n\n\n            let dummyevent = {};\n            dummyevent.type = \"mousemove\";\n            dummyevent.direction = direction;\n\n            this.clientGameSocket.send(\"event\", id, dummyevent);\n            //console.log(player.direction);\n        });\n\n\n        this.canvas.addEventListener(\"touchmove\", (event) => {\n            event.preventDefault();\n\n            let id = this.currentUser.info.userid;\n            let player = this.mainPlayer;\n\n            if (!id || !player) {\n                return;\n            }\n\n            let touch = event.touches[0];\n\n            let c = getTouchPos(this.canvas, touch);\n\n            let player_x = this.mainPlayer.position.x;\n            let player_y = this.mainPlayer.position.y;\n\n            let abs_x = c.x + this.viewport.xView;\n            let abs_y = c.y + this.viewport.yView;\n\n            let direction = new Pair(abs_x - player_x, abs_y - player_y);\n\n\n            let dummyevent = {};\n            dummyevent.type = \"mousemove\";\n            dummyevent.direction = direction;\n\n            this.clientGameSocket.send(\"event\", id, dummyevent);\n        });\n\n        this.canvas.addEventListener(\"mousedown\", (event) => {\n\n\n            let id = this.currentUser.info.userid;\n\n            let dummyevent = {};\n            dummyevent.type = \"mousedown\";\n\n            if (id) {\n                this.clientGameSocket.send(\"event\", id, dummyevent);\n            }\n        });\n\n        this.canvas.addEventListener(\"mouseup\", (event) => {\n            let id = this.currentUser.info.userid;\n\n            let dummyevent = {};\n            dummyevent.type = \"mouseup\";\n\n            if (id) {\n                this.clientGameSocket.send(\"event\", id, dummyevent);\n            }\n        });\n\n\n        let tapedTwice = false;\n\n        const tapHandler = (event) => {\n            if (!tapedTwice) {\n                tapedTwice = true;\n                setTimeout(function () {\n                    tapedTwice = false;\n                }, 300);\n                return false;\n            }\n            event.preventDefault();\n            //action on double tap goes below\n\n            let id = this.currentUser.info.userid;\n\n            let dummyevent = {};\n            dummyevent.type = \"keydown\";\n            dummyevent.keyCode = 82;\n            if (id) {\n                this.clientGameSocket.send(\"event\", id, dummyevent);\n            }\n            return true;\n\n        };\n\n        this.canvas.addEventListener(\"touchstart\", (event) => {\n            event.preventDefault();\n            let id = this.currentUser.info.userid;\n\n            if (id) {\n\n                if (tapHandler(event)) {\n                    return;\n                }\n\n\n                if (event.touches.length === 2) {\n                    let dummyevent2 = {};\n                    dummyevent2.type = \"keydown\";\n                    dummyevent2.keyCode = 70;\n                    this.clientGameSocket.send(\"event\", id, dummyevent2);\n                    return;\n                }\n\n\n                let dummyevent = {};\n                dummyevent.type = \"mousedown\";\n\n                let touch = event.touches[0];\n\n                let c = getTouchPos(this.canvas, touch);\n\n                let player_x = this.mainPlayer.position.x;\n                let player_y = this.mainPlayer.position.y;\n\n                let abs_x = c.x + this.viewport.xView;\n                let abs_y = c.y + this.viewport.yView;\n\n                let direction = new Pair(abs_x - player_x, abs_y - player_y);\n                dummyevent.direction = direction;\n\n                this.clientGameSocket.send(\"event\", id, dummyevent);\n            }\n        });\n\n\n        this.canvas.addEventListener(\"touchend\", (event) => {\n            event.preventDefault();\n\n            let dummyevent = {};\n            dummyevent.type = \"mouseup\";\n\n\n            let id = this.currentUser.info.userid;\n            if (id) {\n                this.clientGameSocket.send(\"event\", id, dummyevent);\n            }\n        });\n\n\n        function round(a) {\n            // return Math.round(100*a)/100;\n            return Math.round(a);\n        }\n\n\n        if (window.DeviceMotionEvent) {\n            let left = false;\n            let right = false;\n            let up = false;\n            let down = false;\n            let sens = 2;\n\n\n            console.log(\"DeviceMotionEvent supported\");\n            window.ondevicemotion = (event) => {\n                event.preventDefault();\n\n                let id = this.currentUser.info.userid;\n                let player = this.mainPlayer;\n                if (!id) {\n                    return;\n                }\n                let dummyevent = {};\n\n                let agx = round(event.accelerationIncludingGravity.x);\n                let agy = round(event.accelerationIncludingGravity.y);\n\n\n                if (agx <= -sens) {\n                    //SEND LEFT\n                    if (!left) {\n                        dummyevent.type = \"keydown\";\n                        dummyevent.keyCode = 65;\n                        this.clientGameSocket.send(\"event\", id, dummyevent);\n                        left = true;\n                    }\n                } else {\n                    if (left) {\n                        dummyevent.type = \"keyup\";\n                        dummyevent.keyCode = 65;\n                        this.clientGameSocket.send(\"event\", id, dummyevent);\n                        left = false;\n                    }\n                }\n\n\n                if (agx >= sens) {\n                    //SEND LEFT\n                    if (!right) {\n                        dummyevent.type = \"keydown\";\n                        dummyevent.keyCode = 68;\n                        this.clientGameSocket.send(\"event\", id, dummyevent);\n                        right = true;\n                    }\n                } else {\n                    if (right) {\n                        dummyevent.type = \"keyup\";\n                        dummyevent.keyCode = 68;\n                        this.clientGameSocket.send(\"event\", id, dummyevent);\n                        right = false;\n                    }\n                }\n\n\n                if (agy <= -sens) {\n                    //SEND DOWN\n                    if (!down) {\n                        dummyevent.type = \"keydown\";\n                        dummyevent.keyCode = 83;\n                        this.clientGameSocket.send(\"event\", id, dummyevent);\n                        down = true;\n                    }\n                } else {\n                    if (down) {\n                        dummyevent.type = \"keyup\";\n                        dummyevent.keyCode = 83;\n                        this.clientGameSocket.send(\"event\", id, dummyevent);\n                        down = false;\n                    }\n                }\n\n\n                if (agy >= sens) {\n                    //SEND TOP\n                    if (!up) {\n                        dummyevent.type = \"keydown\";\n                        dummyevent.keyCode = 87;\n                        this.clientGameSocket.send(\"event\", id, dummyevent);\n                        up = true;\n                    }\n                } else {\n                    if (up) {\n                        dummyevent.type = \"keyup\";\n                        dummyevent.keyCode = 87;\n                        this.clientGameSocket.send(\"event\", id, dummyevent);\n                        up = false;\n                    }\n                }\n\n                if (!player) {\n                    let threshold = 14;\n                    let ax = round(event.acceleration.x);\n                    let ay = round(event.acceleration.y);\n                    let az = round(event.acceleration.z);\n\n                    if (ax > threshold || ay > threshold || az > threshold) {\n                        this.clientGameSocket.send(\"start\", id);\n\n                    }\n                }\n            }\n        }\n    }\n}\n\nclass World {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        //The drawing sequence\n        this.actors = {};\n        this.background = new backGround('rgb(128, 175, 71)', this.width, this.height);\n        this.collisionDetector = new collisionDetector();\n        //All color used\n        this.images = {\n            crate: document.getElementById('crate'),\n            goldenCrate: document.getElementById('goldenCrate'),\n            house: document.getElementById('house1'),\n            mansion: document.getElementById('mansion'),\n            stone1: document.getElementById('stone1'),\n            stone2: document.getElementById('stone2'),\n            bed: document.getElementById('bed1'),\n            tree1: document.getElementById('tree1'),\n            bush1: document.getElementById('bush1'),\n            toilet: document.getElementById('toilet')\n        };\n        this.playerCount = 0;\n    }\n\n\n    clearWorld() {\n        this.actors = {};\n        this.playerCount = 0;\n    }\n\n\n    addServerActors(serverActors, username) {\n        if (!this.game.currentUser.info.userid) {\n            return;\n        }\n\n        this.game.unsetMainPlayer();\n\n        for (var key in serverActors) {\n            //if (this.actors.hasOwnProperty(key)) {\n            let acts = serverActors[key];\n            for (var i = 0; i < acts.length; i++) {\n                let server_actor = acts[i];\n                let position = new Pair(server_actor.position.x, server_actor.position.y);\n\n                let a = null;\n\n                //let position = new Pair(30, 30);\n                switch (key) {\n                    case \"Floor\":\n                        a = new Floor(this, position, server_actor.shape.height, server_actor.shape.width, server_actor.colour);\n                        this.addActor(a);\n                        break;\n                    case \"Projectile_556\":\n                        a = new Projectile_556(this, position);\n                        this.addActor(a);\n                        break;\n\n                    case \"Projectile_762\":\n                        a = new Projectile_762(this, position);\n                        this.addActor(a);\n                        break;\n\n                    case \"Projectile_shotGunShell\":\n                        a = new Projectile_shotGunShell(this, position);\n                        this.addActor(a);\n                        break;\n                    case \"Ammo_556\":\n                        a = new Ammo_556(this, position);\n                        this.addActor(a);\n                        break;\n                    case \"Ammo_762\":\n                        a = new Ammo_762(this, position);\n                        this.addActor(a);\n                        break;\n                    case \"Ammo_shotGunShell\":\n                        a = new Ammo_shotGunShell(this, position);\n                        this.addActor(a);\n                        break;\n                    case \"Weapon_AK47\":\n                        a = new Weapon_AK47(this, position);\n                        this.addActor(a);\n                        break;\n                    case \"Weapon_M416\":\n                        a = new Weapon_M416(this, position);\n                        this.addActor(a);\n                        break;\n\n                    case \"Weapon_S686\":\n                        a = new Weapon_S686(this, position);\n                        this.addActor(a);\n                        break;\n                    case \"Player\":\n                        this.playerCount += 1;\n                        a = new Player(this, position, server_actor.speed, server_actor.width, server_actor.height, server_actor.color);\n                        a.changeDirection(server_actor.direction);\n                        a.inventory = server_actor.inventory;\n                        a.healthPoint = server_actor.healthPoint;\n                        a.id = server_actor.id;\n\n                        if (server_actor.curr_weapon) {\n                            let w = new Weapon(this, server_actor.curr_weapon.position, server_actor.curr_weapon.shape,\n                                server_actor.curr_weapon.ammo, server_actor.curr_weapon.max_ammo, null, null, null, null, server_actor.curr_weapon.colour);\n                            w.name = server_actor.curr_weapon.name;\n                            a.curr_weapon = w;\n\n                        }\n\n                        if (server_actor.id === this.game.currentUser.info.userid) {\n                            this.game.setMainPlayer(a);\n                            break;\n                        }\n\n                        this.addActor(a);\n                        break;\n                    case \"aimbotAI\":\n                        break;\n\n                    case \"randomAI\":\n                        break;\n                    case \"circleWall\":\n                        a = new circleWall(this, position, server_actor.shape.radius);\n                        this.addActor(a);\n                        break;\n                    case \"rectWall\":\n                        a = new rectWall(this, position, server_actor.shape.height, server_actor.shape.width);\n                        this.addActor(a);\n                        break;\n\n                    case \"Crate\":\n                        a = new Crate(this, position, server_actor.shape.height, server_actor.shape.width);\n                        this.addActor(a);\n                        break;\n                    case \"goldenCrate\":\n                        a = new goldenCrate(this, position, server_actor.shape.height, server_actor.shape.width);\n                        this.addActor(a);\n                        break;\n\n                    case \"Stone\":\n                        a = new Stone(this, position, server_actor.shape.radius);\n                        this.addActor(a);\n                        break;\n\n                    case \"Tree\":\n                        a = new Tree(this, position, server_actor.shape.radius);\n                        this.addActor(a);\n                        break;\n\n                    case \"Bush\":\n                        a = new Bush(this, position, server_actor.shape.radius);\n                        this.addActor(a);\n                        break;\n\n                    case \"Bed\":\n                        a = new Bed(this, position, server_actor.shape.height, server_actor.shape.width);\n                        this.addActor(a);\n\n                        break;\n                    case \"Toilet\":\n                        a = new Toilet(this, position, server_actor.shape.height, server_actor.shape.width);\n                        this.addActor(a);\n                        break;\n                    case \"House\":\n                        a = new House(this, position, server_actor.shape.height, server_actor.shape.width);\n                        if (this.game.mainPlayer) {\n                            a.detectPlayer(this.game.mainPlayer);\n                        }\n                        this.addActor(a);\n                        break;\n\n                    case \"Mansion\":\n                        a = new Mansion(this, position, server_actor.shape.height, server_actor.shape.width);\n                        if (this.game.mainPlayer) {\n                            a.detectPlayer(this.game.mainPlayer);\n                        }\n                        this.addActor(a);\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n\n    addPlayer(player) {\n        this.addActor(player);\n        this.player = player;\n    }\n\n    removePlayer() {\n        if (this.player) {\n            this.removeActor(this.player);\n            this.player = null;\n        }\n    }\n\n    addActor(actor) {\n        //console.log(actor.constructor.name);\n        if (this.actors[actor.constructor.name] === undefined) {\n            this.actors[actor.constructor.name] = [];\n        }\n\n        this.actors[actor.constructor.name].push(actor);\n    }\n\n    removeActor(actor) {\n        var index = this.actors[actor.constructor.name].indexOf(actor);\n        if (index !== -1) {\n            this.actors[actor.constructor.name].splice(index, 1);\n        }\n    }\n\n    // return the first actor at coordinates (x,y) return null if there is no such actor\n\n    step(steps) {\n\n    }\n\n    //Draw whole world\n    draw(ctx, x_off, y_off) {\n\n        let cwidth = ctx.canvas.width;\n        let cheight = ctx.canvas.height;\n\n        //console.log(cwidth, cheight);\n        ctx.clearRect(0, 0, this.width, this.height);\n\n        ctx.save();\n        //Draw background\n        this.background.draw(ctx, x_off, y_off);\n        ctx.restore();\n\n        let boundary = 500;\n        //console.log(this.actors);\n        for (var key in this.actors) {\n\n\n            let acts = this.actors[key];\n            for (var i = 0; i < acts.length; i++) {\n                if (x_off - boundary < acts[i].position.x && acts[i].position.x < x_off + cwidth + boundary && y_off - boundary < acts[i].position.y && acts[i].position.y < boundary + y_off + cheight) {\n                    ctx.save();\n                    acts[i].draw(ctx, x_off, y_off);\n                    ctx.restore();\n                }\n            }\n\n\n        }\n        //Draw player HUD\n        if (this.game.mainPlayer) {\n            this.game.mainPlayer.hud.draw(ctx, x_off, y_off);\n        }\n\n    }\n\n\n    getPlayerNum() {\n        return this.playerCount;\n    }\n\n\n}\n\n//View port, follow player to adjust  view\nclass Viewport {\n    constructor(canvas, x, y, wwidth, wheight) {\n        this.canvas = canvas;\n        // the world width and world height\n        this.world_width = wwidth;\n        this.world_height = wheight;\n        this.xView = x;\n        this.yView = y;\n        this._followed = null;\n\n        this.vpRect = new Rectangle(this.xView, this.yView, this.canvas.width, this.canvas.height);\n        this.worldRect = new Rectangle(0, 0, this.world_width, this.world_height);\n\n    }\n\n    get followed() {\n        return this._followed;\n    }\n\n    set followed(actor) {\n        this._followed = actor;\n    }\n\n    follow(actor) {\n        this.followed = actor;\n    }\n\n    update() {\n        if (this.followed) {\n            //update x and y\n            let act_x = this.followed.position.x;\n            let act_y = this.followed.position.y;\n            let View_width = this.canvas.width;\n            let View_height = this.canvas.height;\n\n            this.xView = act_x - View_width / 2;\n            this.yView = act_y - View_height / 2;\n\n            this.vpRect.set(this.xView, this.yView, View_width, View_height);\n\n            if (!this.vpRect.within(this.worldRect)) {\n                if (this.vpRect.x < this.worldRect.x)\n                    this.xView = this.worldRect.x;\n                if (this.vpRect.y < this.worldRect.y)\n                    this.yView = this.worldRect.y;\n                if (this.vpRect.right > this.worldRect.right)\n                    this.xView = this.worldRect.right - View_width;\n                if (this.vpRect.bottom > this.worldRect.bottom)\n                    this.yView = this.worldRect.bottom - View_height;\n            }\n\n        }\n\n    }\n\n}\n\nclass Pair {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    toString() {\n        return \"(\" + this.x + \",\" + this.y + \")\";\n    }\n\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    normalize(m) {\n        let magnitude = Math.sqrt(this.x * this.x + this.y * this.y);\n        this.x = (this.x / magnitude) * m;\n        this.y = (this.y / magnitude) * m;\n\n    }\n\n    distance(p) {\n        let x = p.x - this.x;\n        let y = p.y - this.y;\n        return Math.sqrt(x * x + y * y);\n    }\n\n    directionOf(p) {\n        return new Pair(p.x - this.x, p.y - this.y);\n    }\n}\n\n//actor class, it is abstract\nclass Actor {\n    constructor(world, position, shape) {\n        this.world = world;\n        this.position = position;\n        this.shape = shape;\n    }\n\n    toString() {\n\n    }\n\n    step(steps) {\n        throw \"Not Implemented Yet\";\n    }\n\n    draw(ctx, x, y) {\n\n        if (this.shape instanceof Rectangle) {\n            ctx.translate(-x, -y);\n            ctx.fillRect(this.position.x, this.position.y, this.shape.width, this.shape.height);\n        } else if (this.shape instanceof Circle) {\n            ctx.beginPath();\n            ctx.arc(this.position.x - x, this.position.y - y, this.shape.radius, 0, 2 * Math.PI, false);\n            ctx.closePath();\n            ctx.fill();\n        }\n    }\n\n    setPosition(x, y) {\n        this.position.x = x;\n        this.position.y = y;\n        this.shape.x = x;\n        this.shape.y = y;\n    }\n\n}\n\n//TODO, SEND MESSAGE TO SERVER\nclass Control {\n    constructor() {\n        this._left = false;\n        this._up = false;\n        this._right = false;\n        this._down = false;\n        this._fire = false;\n    }\n\n    get fire() {\n        return this._fire;\n    }\n\n    set fire(value) {\n        this._fire = value;\n    }\n\n    get left() {\n        return this._left;\n    }\n\n    set left(value) {\n        this._left = value;\n    }\n\n    get up() {\n        return this._up;\n    }\n\n    set up(value) {\n        this._up = value;\n    }\n\n    get right() {\n        return this._right;\n    }\n\n    set right(value) {\n        this._right = value;\n    }\n\n    get down() {\n        return this._down;\n    }\n\n    set down(value) {\n        this._down = value;\n    }\n\n}\n\n//Player, user control it\nclass Player extends Actor {\n    constructor(world, position, speed, width, height, color) {\n\n        let shape = new Circle(position.x, position.y, width);\n\n        super(world, position, shape);\n\n        //Num of pixels per second\n        this.speed = speed;\n        this.controls = new Control();\n        this.width = width;\n        this.height = height;\n        this.color = color;\n\n        this.inventory = {\n            Projectile_556: 100,\n            Projectile_762: 100,\n            Projectile_shotGunShell: 100\n\n        };\n\n        //it is relative positions\n        this.direction = new Pair(position.x, position.y);\n\n        this.weapon1 = null;\n        this.weapon2 = null;\n        this.curr_weapon = null;\n\n        this.healthPoint = 100;\n        this.maxHealthPoint = 100;\n\n        this.hud = new playerHUD(this);\n\n        this.stats = new playerGameStats(this);\n\n    }\n\n    resetPlayer() {\n        this.weapon1 = null;\n        this.weapon2 = null;\n        this.curr_weapon = null;\n\n        this.healthPoint = 100;\n        this.inventory = {\n            Projectile_556: 100,\n            Projectile_762: 100,\n            Projectile_shotGunShell: 100\n\n        };\n\n    }\n\n    //If event happen, pick the nearest one thing\n    pickup() {\n\n        let ams = this.world.getActorApproByType(this, ammos);\n        for (let i = 0; i < ams.length; i++) {\n            this.addAmmo(ams[i]);\n            return;\n        }\n\n        let ws = this.world.getActorApproByType(this, weapons);\n        for (let i = 0; i < ws.length; i++) {\n            this.assignWeapon(ws[i]);\n            return;\n        }\n\n    }\n\n    // Add ammo into self inventory\n    addAmmo(ammo_ojb) {\n        this.world.removeActor(ammo_ojb);\n\n        if (this.inventory[ammo_ojb.ammo_type.name]) {\n            this.inventory[ammo_ojb.ammo_type.name] += ammo_ojb.ammo;\n        } else {\n            this.inventory[ammo_ojb.ammo_type.name] = ammo_ojb.ammo;\n        }\n\n    }\n\n    switchWeapon(int) {\n        if (int === 1) {\n            this.curr_weapon = this.weapon1;\n            return;\n        }\n        if (int === 2) {\n            this.curr_weapon = this.weapon2;\n        }\n\n    }\n\n    //assign a weapon to player from ground\n    assignWeapon(weapon) {\n\n        weapon.owner = this;\n\n        this.world.removeActor(weapon);\n        if (!this.weapon1) {\n            this.weapon1 = weapon;\n            this.curr_weapon = this.weapon1;\n            return;\n        }\n\n        if (!this.weapon2) {\n            this.weapon2 = weapon;\n            this.curr_weapon = this.weapon2;\n            return;\n        }\n\n        if (this.curr_weapon === this.weapon1) {\n            //TODO DROP WEAPON\n            this.world.addActor(this.weapon1);\n            this.weapon1.owner = null;\n\n            this.weapon1 = weapon;\n            this.curr_weapon = this.weapon1;\n\n            return;\n        }\n\n        if (this.curr_weapon === this.weapon2) {\n            this.world.addActor(this.weapon2);\n            this.weapon2.owner = null;\n\n            this.weapon2 = weapon;\n            this.curr_weapon = this.weapon2;\n            return;\n        }\n\n        throw \"assign weapon error\";\n\n    }\n\n    reload() {\n        if (!this.curr_weapon) {\n            return;\n        }\n        if (this.inventory[this.curr_weapon.ammo_type.name]) {\n            //console.log(this.curr_weapon.ammo);\n            let ammo_num = this.inventory[this.curr_weapon.ammo_type.name];\n            this.inventory[this.curr_weapon.ammo_type.name] = this.curr_weapon.reload(ammo_num);\n        }\n\n    }\n\n    //Shot at current direction\n    shot() {\n        if (!this.curr_weapon) {\n            return;\n        }\n        this.curr_weapon.fire(this.direction);\n    }\n\n    changeDirection(position) {\n        this.direction.x = position.x;\n        this.direction.y = position.y;\n        this.direction.normalize(1);\n\n    }\n\n    takeDamage(dmg) {\n        if (this.healthPoint == 0) {\n            return;\n        }\n        this.healthPoint = ((this.healthPoint - dmg) < 0 ? 0 : (this.healthPoint - dmg));\n\n    }\n\n    isDie() {\n        return this.healthPoint <= 0;\n    }\n\n\n    draw(ctx, x_off, y_off) {\n\n\n        let a = angle(this.position.x, this.position.y, this.position.x + this.direction.x, this.position.y + this.direction.y);\n\n        ctx.translate(this.position.x - x_off, this.position.y - y_off);\n        ctx.fillStyle = 'rgb(0,0,0)';\n        ctx.font = \"15px Arial\";\n        ctx.fillText(this.id, -10, 40);\n\n\n        ctx.fillStyle = this.color;\n        ctx.strokeStyle = 'rgb(0,0,0)';\n        ctx.lineWidth = 4;\n        ctx.rotate(a);\n\n        ctx.beginPath();\n        ctx.arc(0, 0, this.shape.radius, 0, 2 * Math.PI, false);\n        ctx.stroke();\n        ctx.fill();\n        ctx.closePath();\n\n        this.drawWeapon(ctx, this.position.x - 25, this.position.y);\n\n    }\n\n    drawWeapon(ctx, x_off, y_off) {\n        if (this.curr_weapon) {\n            //draw hands\n            ctx.beginPath();\n            ctx.arc(this.width + 3, -3, 5, 0, 2 * Math.PI, false);\n            ctx.fill();\n            ctx.stroke();\n            ctx.closePath();\n\n            ctx.beginPath();\n            ctx.arc(this.width + 23, 10, 5, 0, 2 * Math.PI, false);\n            ctx.stroke();\n            ctx.fill();\n            ctx.closePath();\n\n            this.curr_weapon.draw(ctx, x_off, y_off);\n\n        } else {\n            //draw hands\n            ctx.beginPath();\n            ctx.arc(this.width, this.height, 5, 0, 2 * Math.PI, false);\n            ctx.stroke();\n            ctx.fill();\n            ctx.closePath();\n\n            ctx.beginPath();\n            ctx.arc(this.width, -this.height, 5, 0, 2 * Math.PI, false);\n            ctx.stroke();\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    toStringHealthPoint() {\n        return this.healthPoint + \"/\" + this.maxHealthPoint;\n    }\n\n}\n\n//Player HUD\nclass playerHUD {\n    constructor(player) {\n        this.player = player;\n\n    }\n\n    draw(ctx, x, y) {\n        ctx.save();\n        this.drawAmmoHud(ctx, x, y);\n        ctx.restore();\n        ctx.save();\n        this.drawHeathBarHud(ctx, x, y);\n        ctx.restore();\n        ctx.save();\n        this.drawInventoryHud(ctx, x, y);\n        ctx.restore();\n        ctx.save();\n        this.drawMiniMap(ctx, x, y);\n        ctx.restore();\n    }\n\n    drawInventoryHud(ctx, x, y) {\n        let canvas_width = ctx.canvas.width;\n        let width = 150;\n        var num_item = 0;\n        let col_height = 20;\n        for (let key in this.player.inventory) {\n            num_item++;\n        }\n\n        ctx.strokeStyle = 'rgb(0,0,0)'\n        ctx.fillStyle = 'rgba(255,255,255,0.3)';\n\n        ctx.beginPath();\n        ctx.rect(canvas_width - width, 0, width, (num_item + 1) * col_height);\n        ctx.stroke();\n        ctx.closePath();\n\n        ctx.fillRect(canvas_width - width, 0, width, (num_item + 1) * col_height);\n\n        num_item = 0;\n        ctx.font = \"15px Arial\";\n        ctx.fillStyle = 'rgb(0,0,0)';\n        for (let key in this.player.inventory) {\n            //console.log(classnameToName[key] + \" -> \" + this.player.inventory[key]);\n            ctx.fillText(classnameToName[key] + \" -> \" + this.player.inventory[key], canvas_width - width + 5, (num_item + 1) * col_height);\n            num_item++;\n        }\n\n    }\n\n    drawHeathBarHud(ctx, x, y) {\n        let canvas_height = ctx.canvas.height;\n\n        let width = 200;\n        let height = 30;\n\n        let healthBarwidth = (this.player.healthPoint / this.player.maxHealthPoint) * width;\n        ctx.fillStyle = 'rgb(0,255,0)';\n        ctx.fillRect(0, canvas_height - height, healthBarwidth, height);\n\n        ctx.fillStyle = 'rgb(0,0,0)';\n        ctx.font = \"30px Arial\";\n        ctx.fillText(this.player.toStringHealthPoint(), 0, canvas_height - height + 25);\n\n        ctx.strokeStyle = 'rgb(0,0,0)';\n        ctx.beginPath();\n        ctx.rect(0, canvas_height - height, width, height);\n        ctx.stroke();\n    }\n\n    drawAmmoHud(ctx, x, y) {\n\n        let canvas_width = ctx.canvas.width;\n        let canvas_height = ctx.canvas.height;\n        let width = 200;\n        let height = 100;\n        ctx.fillStyle = 'rgbA(255,255,255, 0.1)';\n        ctx.strokeStyle = 'rgb(0,0,0)';\n        ctx.beginPath();\n        ctx.rect(canvas_width - width, canvas_height - height, width, height);\n        ctx.stroke();\n        ctx.fill();\n        //Draw ammo\n\n        ctx.font = \"30px Arial\";\n        ctx.fillStyle = 'rgb(0,0,0)';\n        if (this.player.curr_weapon) {\n            ctx.fillText(this.player.curr_weapon.toString(), canvas_width - width + 5, canvas_height - height + 30);\n            ctx.fillText(\"\" + this.player.curr_weapon.toAmmo(), canvas_width - width + 5, canvas_height - height + 2 * 30);\n        }\n\n    }\n\n    drawMiniMap(ctx, x, y) {\n\n        let canvas_width = ctx.canvas.width;\n        let canvas_height = ctx.canvas.height;\n        let width = 200;\n        let height = 50;\n        ctx.fillStyle = 'rgbA(255,255,255, 0.1)';\n        ctx.strokeStyle = 'rgb(0,0,0)';\n        ctx.beginPath();\n        ctx.rect(0, 0, width, height);\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.font = \"20px Arial\";\n        ctx.fillStyle = 'rgb(0,0,0)';\n        ctx.fillText(\"Player Nearby: \" + (this.player.world.getPlayerNum() - 1), 5, 30);\n\n    }\n}\n\n//Player stats\nclass playerGameStats {\n    constructor(player) {\n        this.damageTaken = 0;\n        this.damageDone = 0;\n        this.kill = 0;\n        this.killList = [];\n        this.killed = null;\n    }\n\n    recordDamageTaken(dmg) {\n        this.damageTaken += dmg;\n    }\n\n    recordDamageDone(dmg) {\n        this.damageDone += dmg;\n    }\n\n    recordKill(player) {\n        this.kill += 1;\n        this.killList.push(player);\n    }\n\n    recordKilled(player) {\n        this.killed = player;\n\n    }\n\n}\n\n//AI, use a state machine to control itself\nclass aimbotAI extends Player {\n    constructor(world, position, speed, width, height, color, reactionTime, stepsBeforeChangeDirection) {\n        super(world, position, speed, width, height, color);\n\n        this.controls = new Control();\n\n        this.stateMachine = new aimbotStateMachine(this, this.controls, reactionTime, stepsBeforeChangeDirection);\n\n        this.stateMachine.start();\n\n        this.inventory = {\n            Projectile_556: 1000,\n            Projectile_762: 1000,\n            Projectile_shotGunShell: 1000\n\n        };\n\n        let w = this.world.randomGenerateWeapon(this.position.x, this.position.y);\n        w.owner = this;\n        this.weapon1 = w;\n        this.curr_weapon = this.weapon1;\n    }\n\n    step(steps) {\n        if (this.isDie()) {\n            this.stateMachine.stop();\n        }\n        super.step(steps);\n    }\n}\n\nclass randomAI extends Player {\n    constructor(world, position, speed, width, height, color, reactionTime, stepsBeforeChangeDirection) {\n        super(world, position, speed, width, height, color);\n\n        this.controls = new Control();\n\n        this.stateMachine = new randomStateMachine(this, this.controls, reactionTime, stepsBeforeChangeDirection);\n\n        this.stateMachine.start();\n\n        this.inventory = {\n            Projectile_556: 1000,\n            Projectile_762: 1000,\n            Projectile_shotGunShell: 1000\n\n        };\n\n        let w = this.world.randomGenerateWeapon(this.position.x, this.position.y);\n        w.owner = this;\n        this.weapon1 = w;\n        this.curr_weapon = this.weapon1;\n    }\n\n    step(steps) {\n        if (this.isDie()) {\n            this.stateMachine.stop();\n        }\n        super.step(steps);\n    }\n}\n\n//Abstract CSM\nclass controlStateMachine {\n    constructor(player, controls, reactionTime, stepsBeforeChangeDirection) {\n        this.controls = controls;\n        this.reactionTime = reactionTime;\n        this.state = 'move';\n        this.reactionTimerId = null;\n        this.player = player;\n        this.stepsBeforeChangeDirection = stepsBeforeChangeDirection;\n        this.steps = this.stepsBeforeChangeDirection;\n    }\n\n    randomChangeMovingDirection() {\n        let d = getRandomInt(1, 4);\n\n        this.stopMove();\n        switch (d) {\n            case 1:\n                this.controls.left = true;\n                break;\n            case 2:\n                this.controls.right = true;\n                break;\n            case 3:\n                this.controls.up = true;\n                break;\n            case 4:\n                this.controls.down = true;\n                break;\n            default:\n                break;\n        }\n    }\n\n    stopMove() {\n        this.controls.left = false;\n        this.controls.right = false;\n        this.controls.up = false;\n        this.controls.down = false;\n\n    }\n\n    fire() {\n        this.controls.fire = true;\n    }\n\n    stopFire() {\n\n        this.controls.fire = false;\n    }\n\n    action() {\n\n    }\n\n    start() {\n        this.reactionTimerId = setInterval(() => this.action(), this.reactionTime);\n    }\n\n    stop() {\n        clearInterval(this.reactionTimerId);\n    }\n\n}\n\n//Implement action, to let AI start moving and firing\nclass aimbotStateMachine extends controlStateMachine {\n    action() {\n\n        //State: move\n        let playerNear = this.player.world.getPlayerNearby(this.player, 600);\n\n        switch (this.state) {\n            case \"move\":\n                this.steps--;\n                if (playerNear.length === 0) {\n                    //continue moving\n                    if (this.steps <= 0) {\n                        this.randomChangeMovingDirection();\n                        this.steps = this.stepsBeforeChangeDirection;\n                    }\n                } else {\n                    this.state = 'fire';\n                }\n                break;\n            case 'fire':\n                this.steps--;\n                if (this.steps <= 0) {\n                    this.randomChangeMovingDirection();\n                    this.steps = this.stepsBeforeChangeDirection;\n                }\n\n                if (playerNear.length === 0) {\n                    this.state = 'move';\n                    this.stopFire();\n                } else if (this.player.curr_weapon.magzineEmpty()) {\n                    this.state = 'reload';\n                    this.stopFire();\n                } else {\n                    this.player.changeDirection(this.player.position.directionOf(playerNear[0].position));\n                    this.fire();\n                }\n                break;\n            case 'reload':\n                this.player.reload();\n                this.state = 'fire';\n                break;\n\n            default:\n        }\n    }\n\n}\n\nclass randomStateMachine extends controlStateMachine {\n\n    action() {\n\n        switch (this.state) {\n            case \"move\":\n                this.steps--;\n                if (this.steps <= 0) {\n                    this.randomChangeMovingDirection();\n                    this.steps = this.stepsBeforeChangeDirection;\n                } else {\n                    this.state = 'fire';\n                }\n                break;\n            case 'fire':\n                this.steps--;\n                if (this.steps <= 0) {\n                    this.randomChangeMovingDirection();\n                    this.player.changeDirection(new Pair(getRandomInt(-255, 255), getRandomInt(-255, 255)));\n                    this.steps = this.stepsBeforeChangeDirection;\n                } else if (this.player.curr_weapon.magzineEmpty()) {\n                    this.state = 'reload';\n                    this.stopFire();\n                } else {\n                    this.fire();\n                }\n                break;\n            case 'reload':\n                this.player.reload();\n                this.state = 'move';\n                break;\n\n            default:\n        }\n    }\n\n}\n\nclass Nonitem extends Actor {\n\n}\n\nclass Item extends Actor {\n    constructor(world, position, shape) {\n        super(world, position, shape);\n        this.player = null;\n    }\n\n    assignPlayer(player) {\n        this.player = player;\n    }\n}\n\n//Weapon class, abstract\nclass Weapon extends Item {\n    constructor(world, position, shape, ammo, max_ammo, damage, speed, firerate, ammo_type, colour, owner, range) {\n        super(world, position, shape);\n        this.ammo = ammo;\n        this.max_ammo = max_ammo;\n        this.damage = damage;\n        this.speed = speed;\n        this.firerate = firerate; //millsecond\n        this.readytofire = true;\n        this.ammo_type = ammo_type; //class construcor\n        this.colour = colour;\n        this.range = range;\n        this.owner = owner;\n        this.name = null;\n\n    }\n\n\n    toString() {\n        return this.name;\n    }\n\n    toAmmo() {\n        return this.ammo + \"/\" + this.max_ammo;\n    }\n\n    draw(ctx, x, y) {\n        ctx.translate(-x, -y);\n        ctx.fillStyle = this.colour;\n        ctx.fillRect(this.position.x, this.position.y, this.shape.width, this.shape.height);\n\n        ctx.strokeStyle = 'rgb(0,0,0)';\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.rect(this.position.x, this.position.y, this.shape.width, this.shape.height);\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n}\n\n//Concrete Weapon class, have differentpropertyy\nclass Weapon_M416 extends Weapon {\n\n    constructor(world, position, owner) {\n\n        let shape = new Rectangle(position.x, position.y, 30, 6);\n        let ammo = 30;\n        let max_ammo = 30;\n        let damage = 20;\n        let speed = 1800;\n        let firerate = 50;\n        let ammo_type = Projectile_556;\n        let colour = 'rgb(255,0,0)';\n        let range = 2000;\n\n        super(world, position, shape, ammo, max_ammo, damage, speed, firerate, ammo_type, colour, owner, range);\n\n    }\n\n}\n\nclass Weapon_AK47 extends Weapon {\n\n    constructor(world, position, owner) {\n\n        let shape = new Rectangle(position.x, position.y, 30, 6);\n        let ammo = 30;\n        let max_ammo = 30;\n        let damage = 20;\n        let speed = 1400;\n        let firerate = 30;\n        let ammo_type = Projectile_762;\n        let colour = 'rgb(0,255,0)';\n        let range = 1000;\n\n        super(world, position, shape, ammo, max_ammo, damage, speed, firerate, ammo_type, colour, owner, range);\n\n    }\n\n}\n\nclass Weapon_S686 extends Weapon {\n    constructor(world, position, owner) {\n\n        let shape = new Rectangle(position.x, position.y, 30, 6);\n        let ammo = 5;\n        let max_ammo = 5;\n        let damage = 40;\n        let speed = 800;\n        let firerate = 500;\n        let ammo_type = Projectile_shotGunShell;\n        let colour = 'rgb(0,0,255)';\n        let range = 800;\n\n        super(world, position, shape, ammo, max_ammo, damage, speed, firerate, ammo_type, colour, owner, range);\n\n    }\n\n\n}\n\n//Abstract Projectile class\nclass Projectile extends Nonitem {\n    constructor(world, position, shape, direction_position, speed, colour, owner, dmg, range) {\n        super(world, position, shape);\n\n        this.speed = speed;\n\n        this.colour = colour;\n        this.owner = owner;\n        this.damage = dmg;\n        this.range = range;\n    }\n\n\n    draw(ctx, x_off, y_off) {\n        ctx.fillStyle = this.colour;\n        // ctx.fillRect(this.x, this.y, this.radius,this.radius);\n        ctx.strokeStyle = 'rgb(0,0,0)';\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.rect(this.position.x, this.position.y, this.shape.width, this.shape.height);\n        ctx.closePath();\n        ctx.stroke();\n        super.draw(ctx, x_off, y_off);\n\n    }\n}\n\n//Three class of Projectile\nclass Projectile_shotGunShell extends Projectile {\n    constructor(world, position, direction_position, speed, owner, dmg, range) {\n        let shape = new Circle(position.x, position.y, 5);\n        let colour = 'rgb(0,0,255)';\n        super(world, position, shape, direction_position, speed, colour, owner, dmg, range);\n    }\n\n}\n\nclass Projectile_556 extends Projectile {\n    constructor(world, position, direction_position, speed, owner, dmg, range) {\n\n        let shape = new Circle(position.x, position.y, 5);\n        let colour = 'rgb(255,0,0)';\n        super(world, position, shape, direction_position, speed, colour, owner, dmg, range);\n    }\n}\n\nclass Projectile_762 extends Projectile {\n    constructor(world, position, direction_position, speed, owner, dmg, range) {\n\n        let shape = new Circle(position.x, position.y, 5);\n        let colour = 'rgb(0,255,0)';\n        super(world, position, shape, direction_position, speed, colour, owner, dmg, range);\n    }\n}\n\n//Abstract ammo class, can be pick up\nclass Ammo extends Item {\n    constructor(world, position, shape, ammo_type, ammo, colour) {\n        super(world, position, shape);\n        this.ammo_type = ammo_type;\n        this.ammo = ammo;\n        this.colour = colour;\n    }\n\n    step(s) {\n\n    }\n\n    draw(ctx, x, y) {\n\n        ctx.fillStyle = this.colour;\n        ctx.strokeStyle = 'rgb(0,0,0)';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.arc(this.position.x - x, this.position.y - y, this.shape.radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.arc(this.position.x - x, this.position.y - y, this.shape.radius / 2, 0, 2 * Math.PI, false);\n        ctx.stroke();\n        ctx.closePath();\n    }\n}\n\n//Three type of Ammo class\nclass Ammo_556 extends Ammo {\n    constructor(world, position, ammo) {\n        let shape = new Circle(position.x, position.y, 10);\n        let ammo_type = Projectile_556;\n        let colour = 'rgb(255,0,0)';\n        super(world, position, shape, ammo_type, ammo, colour);\n    }\n\n    draw(ctx, x, y) {\n        super.draw(ctx, x, y);\n    }\n\n}\n\nclass Ammo_762 extends Ammo {\n    constructor(world, position, ammo) {\n        let shape = new Circle(position.x, position.y, 10);\n        let ammo_type = Projectile_762;\n        let colour = 'rgb(0,255,0)';\n        super(world, position, shape, ammo_type, ammo, colour);\n    }\n\n    draw(ctx, x, y) {\n        super.draw(ctx, x, y);\n    }\n\n}\n\nclass Ammo_shotGunShell extends Ammo {\n    constructor(world, position, ammo) {\n        let shape = new Circle(position.x, position.y, 10);\n        let ammo_type = Projectile_shotGunShell;\n        let colour = 'rgb(0,0,255)';\n        super(world, position, shape, ammo_type, ammo, colour);\n    }\n\n    draw(ctx, x, y) {\n        super.draw(ctx, x, y);\n    }\n\n}\n\n//Abstract class\nclass Nonmovable extends Nonitem {\n\n    step(steps) {\n    }\n}\n\nclass Wall extends Nonmovable {\n    constructor(world, position, shape, colour) {\n        super(world, position, shape);\n        this.colour = colour;\n    }\n\n    step(steps) {\n\n    }\n\n}\n\n//A wall shaped as circle\nclass circleWall extends Wall {\n    constructor(world, position, radius) {\n        let shape = new Circle(position.x, position.y, radius);\n        super(world, position, shape);\n        this.colour = 'rgb(153, 102, 0)';\n    }\n\n    draw(ctx, x, y) {\n        ctx.fillStyle = this.colour;\n        ctx.strokeStyle = 'rgb(0,0,0)';\n        ctx.lineWidth = 4;\n        ctx.translate(-x, -y);\n        ctx.beginPath();\n        ctx.arc(this.position.x, this.position.y, this.shape.radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(this.position.x, this.position.y, this.shape.radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        ctx.stroke();\n\n    }\n\n}\n\n//A wall shaped as Rect\nclass rectWall extends Wall {\n    constructor(world, position, height, width) {\n        let shape = new Rectangle(position.x, position.y, width, height);\n        super(world, position, shape);\n        this.colour = 'rgb(153, 102, 0)';\n    }\n\n    draw(ctx, x, y) {\n        ctx.translate(-x, -y);\n        ctx.strokeStyle = 'rgb(0,0,0)';\n        ctx.lineWidth = 4;\n\n        ctx.fillStyle = this.colour;\n        ctx.beginPath();\n        ctx.rect(this.position.x, this.position.y, this.shape.width, this.shape.height);\n        ctx.closePath();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.rect(this.position.x, this.position.y, this.shape.width, this.shape.height);\n        ctx.closePath();\n        ctx.stroke();\n\n    }\n}\n\n//A wall can be damaged\nclass damageableCircle extends circleWall {\n    constructor(world, position, radius, colour, max_hp) {\n        super(world, position, radius, colour);\n        this.maxHealthPoint = max_hp;\n        this.healthPoint = this.maxHealthPoint;\n\n        this.original_shape = new Circle(position.x, position.y, radius);\n    }\n\n\n    draw(ctx, x, y) {\n        ctx.translate(-x, -y);\n        if (this.image) {\n            let radius = this.shape.radius;\n            ctx.drawImage(this.image, this.position.x - radius, this.position.y - radius, this.shape.radius * 2, this.shape.radius * 2);\n        } else {\n            ctx.fillStyle = this.colour;\n            ctx.beginPath();\n            ctx.arc(this.position.x, this.position.y, this.shape.radius, 0, 2 * Math.PI, false);\n            ctx.closePath();\n            ctx.fill();\n        }\n    }\n\n    setPosition(x, y) {\n        this.original_shape.set(x, y, undefined);\n        super.setPosition(x, y);\n    }\n\n}\n\n//A stone, circle damageable wall\nclass Stone extends damageableCircle {\n    constructor(world, position, radius, colour, max_hp) {\n        super(world, position, radius, colour, max_hp);\n        this.image = this.world.images.stone1;\n\n\n    }\n\n\n}\n\n//A Tree, circle damageable wall\nclass Tree extends damageableCircle {\n    constructor(world, position, radius, colour, max_hp) {\n        super(world, position, radius, colour, max_hp);\n        this.image = this.world.images.tree1;\n    }\n\n}\n\n//A Bush, circle damageable wall\nclass Bush extends damageableCircle {\n    constructor(world, position, radius, colour, max_hp) {\n        super(world, position, radius, colour, max_hp);\n        this.image = this.world.images.bush1;\n\n    }\n\n\n}\n\nclass damageableRect extends rectWall {\n    constructor(world, position, height, width, colour, max_hp) {\n        super(world, position, height, width, colour);\n        this.maxHealthPoint = max_hp;\n        this.healthPoint = this.maxHealthPoint;\n\n        this.original_shape = new Rectangle(position.x, position.y, width, height);\n    }\n\n\n    draw(ctx, x, y) {\n        ctx.translate(-x, -y);\n        if (this.image) {\n            ctx.drawImage(this.image, this.position.x, this.position.y, this.shape.width, this.shape.height);\n        } else {\n            ctx.fillStyle = this.colour;\n            ctx.fillRect(this.position.x, this.position.y, this.shape.width, this.shape.height);\n        }\n    }\n\n\n}\n\n//A Crate, Rect damageable wall\nclass Crate extends damageableRect {\n    constructor(world, position, height, width, colour, max_hp) {\n        super(world, position, height, width, colour, max_hp);\n        this.image = this.world.images.crate;\n\n\n    }\n\n}\n\n//A Bed, Rect damageable wall\nclass Bed extends damageableRect {\n    constructor(world, position, height, width, colour, max_hp) {\n        super(world, position, height, width, colour, max_hp);\n        this.image = this.world.images.bed;\n\n    }\n\n}\n\n//A Toilet, Rect damageable wall\nclass Toilet extends damageableRect {\n    constructor(world, position, height, width, colour, max_hp) {\n        super(world, position, height, width, colour, max_hp);\n        this.image = this.world.images.toilet;\n\n\n    }\n\n\n}\n\n//A golden Crate, Rect damageable wall\nclass goldenCrate extends damageableRect {\n    constructor(world, position, height, width, colour, max_hp) {\n        super(world, position, height, width, colour, max_hp);\n        this.image = this.world.images.goldenCrate;\n\n\n    }\n\n}\n\n\n//Building, show differently when player comes inside\nclass Building extends Nonitem {\n    constructor(world, position, height, width) {\n        let shape = new Rectangle(position.x, position.y, width, height);\n        super(world, position, shape);\n        this.image = null;\n        this.colour = 'rgb(0,0,0)';\n        this.show = true;\n        this.wall_width = 15;\n    }\n\n    detectPlayer(player) {\n\n        this.show = !this.world.collisionDetector.narrowDetection(player, this);\n    }\n\n    draw(ctx, x, y) {\n        ctx.translate(-x, -y);\n        if (this.show) {\n            ctx.drawImage(this.image, this.position.x, this.position.y, this.shape.width, this.shape.height);\n\n        }\n\n    }\n\n}\n\n//Concrete implementation of building, add wall around it\nclass House extends Building {\n    constructor(world, position, height, width) {\n        super(world, position, height, width);\n        this.image = this.world.images.house;\n\n    }\n\n}\n\n//Concrete implementation of building, add wall around it\n//And bed and toliet\nclass Mansion extends Building {\n    constructor(world, position, height, width) {\n        super(world, position, height, width);\n\n        this.image = this.world.images.mansion;\n\n    }\n\n}\n\n//Floor of a building, always draw first\nclass Floor extends Nonitem {\n    constructor(world, position, height, width, colour) {\n        let shape = new Rectangle(position.x, position.y, width, height);\n        super(world, position, shape);\n        this.colour = colour;\n    }\n\n\n    draw(ctx, x, y) {\n        ctx.translate(-x, -y);\n        var color = this.colour;\n\n        ctx.fillStyle = color;\n        ctx.fillRect(this.position.x, this.position.y, this.shape.width, this.shape.height);\n\n\n    }\n\n    step(steps) {\n\n    }\n\n}\n\n//MAP SIZE\nvar WORLD_HEIGHT = 3000;\nvar WORLD_WIDTH = 3000;\n\nvar weapons = ['Weapon_M416', 'Weapon_AK47', 'Weapon_S686'];\nvar ammos = ['Ammo_556', 'Ammo_762', 'Ammo_shotGunShell'];\n\n//Helper method\nlet classnameToName = {\n    Projectile_556: \"Ammo 556\",\n    Projectile_762: \"Ammo 762\",\n    Projectile_shotGunShell: \"ShotGun Shell\",\n    Weapon_AK47: \"AK47\",\n    Weapon_M416: \"M416\",\n    Weapon_S686: \"S686\"\n};\n\nexport default Game;","import React, {Component} from 'react';\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\nimport MainGame from \"./components/MainGame\";\nimport Profile from \"./components/Profile\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MySnackbarContentWrapper from \"./components/SnackBar\";\nimport gameSocket from \"./socket\";\n\n\nimport axios from 'axios';\nimport Game from \"./model\";\n\nclass User {\n    constructor() {\n        this.info = {\n            userid: null,\n            username: null,\n            password: null,\n            gender: null,\n            birthday: null\n        };\n\n        this.achievement = {\n            kill: 0,\n            damage: 0\n        }\n    }\n\n    setInfo(data) {\n        for (var key in data) {\n            if (data.hasOwnProperty(key)) {\n                this.info[key] = data[key];\n            }\n        }\n\n    }\n\n    setAchievement(data) {\n        for (var key in data) {\n            if (data.hasOwnProperty(key)) {\n                this.achievement[key] = data[key];\n            }\n        }\n\n\n    }\n\n    setUserid(userid) {\n        this.info.userid = userid;\n    }\n\n    setPassword(password) {\n        this.info.password = password;\n    }\n\n    clear() {\n        this.info = {\n            userid: null,\n            username: null,\n            password: null,\n            gender: null,\n            birthday: null\n        };\n        this.achievement = {\n            kill: 0,\n            damage: 0\n        }\n    }\n}\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            state: \"login\",\n            error: false,\n            errorMessage: \"\",\n            info: false,\n            infoMessage: \"\",\n        };\n\n        this.currentUser = new User();\n\n        //document.location.host);      // localhost:1234\n        let ip = document.location.hostname;  // localhost\n        let port = document.location.port;  // 1234\n\n        if (!port) {\n            port = \"80\";\n        }\n        console.log(\"ws://\" + ip + \":\" + (port + 1));\n        //this.clientGameSocket = new gameSocket(\"ws://142.1.200.147:10940/\");\n        //this.clientGameSocket = new gameSocket(\"ws://localhost:10940/\");\n        this.clientGameSocket = new gameSocket(\"ws://\" + ip + \":\" + (parseInt(port, 10) + 1));\n\n        this.clientGameSocket.registerEvent().then(() => {\n            console.log(\"CLIENT: client socket open\");\n        });\n\n        this.game = new Game(document.getElementById('stage'), this.currentUser, this.clientGameSocket);\n        this.game.setPlayerEventListener();\n        this.game.step();\n        this.game.draw();\n        this.game.start();\n\n        this.clientGameSocket.game = this.game;\n        this.clientGameSocket.currentUser = this.currentUser;\n\n\n        this.switchToLogin = this.switchToLogin.bind(this);\n        this.switchToSignUp = this.switchToSignUp.bind(this);\n        this.switchToMainGame = this.switchToMainGame.bind(this);\n        this.switchToProfile = this.switchToProfile.bind(this);\n        this.getUserInfo = this.getUserInfo.bind(this);\n        this.handleError = this.handleError.bind(this);\n        this.handleErrorClose = this.handleErrorClose.bind(this);\n\n        this.handleInfo = this.handleInfo.bind(this);\n        this.handleInfoClose = this.handleInfoClose.bind(this);\n        this.getUserAchievement = this.getUserAchievement.bind(this);\n        this.getTop10Kill = this.getTop10Kill.bind(this);\n\n    }\n\n    switchToSignUp() {\n        this.setState((prevState, props) => {\n            return {state: \"signup\"};\n        })\n    }\n\n    switchToLogin() {\n        this.setState((prevState, props) => {\n            return {state: \"login\"};\n        })\n    }\n\n    switchToMainGame() {\n        this.setState((prevState, props) => {\n            return {state: \"maingame\"};\n        })\n    }\n\n    switchToProfile() {\n        this.getUserAchievement();\n\n        this.setState((prevState, props) => {\n            return {state: \"profile\"};\n        })\n    }\n\n    switchToAchievement() {\n        this.setState((prevState, props) => {\n            return {state: \"profile\"};\n        })\n    }\n\n    getUserInfo() {\n        let userid = this.currentUser.info.userid;\n\n        if (!userid) {\n            this.handleError(\"Unable to retrieve USER ID, please login again\");\n            return;\n        }\n\n        // Do async job\n        axios.get(\"/api/user/\" + userid).then(\n            (res) => {\n                this.currentUser.setInfo(res.data);\n            }\n        ).catch((error) => {\n            this.handleError(\"Unable to retrieve User Profile\");\n        });\n    }\n\n\n    getUserAchievement() {\n        let userid = this.currentUser.info.userid;\n\n        if (!userid) {\n            this.handleError(\"Unable to retrieve USER ID, please login again\");\n            return;\n        }\n\n        axios.get(\"/api/achievement/\" + userid).then(\n            (res) => {\n                this.currentUser.setAchievement(res.data);\n                this.setState({});\n            }\n        ).catch((error) => {\n            this.handleError(\"Unable to retrieve User achievement\");\n        });\n    }\n\n\n    getTop10Kill() {\n        axios.get(\"/api/achievement\").then(\n            (res) => {\n                //     //console.log(\"GET TOP 10\" + JSON.stringify(data));\n                //     // displayTop10(data);\n\n            }\n        ).catch((error) => {\n            this.handleError(\"Unable to retrieve Top 10 Player\");\n        });\n    }\n\n\n    handleError(message) {\n        this.setState({\n            error: true,\n            errorMessage: message\n        });\n    }\n\n    handleErrorClose() {\n        this.setState(\n            {\n                error: false,\n                errorMessage: \"\"\n            }\n        )\n\n    }\n\n    handleInfo(message) {\n        this.setState({\n            info: true,\n            infoMessage: message\n        });\n    }\n\n    handleInfoClose() {\n        this.setState(\n            {\n                info: false,\n                infoMessage: \"\"\n            }\n        )\n    }\n\n\n    render() {\n\n\n        const state = this.state.state;\n\n\n        let errorbar =\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={this.state.error}\n                autoHideDuration={6000}\n                onClose={this.handleErrorClose}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleErrorClose}\n                    variant=\"error\"\n                    message={this.state.errorMessage}\n                />\n            </Snackbar>;\n        let infobar = <Snackbar\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n            open={this.state.info}\n            autoHideDuration={6000}\n            onClose={this.handleInfoClose}\n        >\n            <MySnackbarContentWrapper\n                onClose={this.handleInfoClose}\n                variant=\"success\"\n                message={this.state.infoMessage}\n            />\n        </Snackbar>;\n        if (state === 'login') {\n            return (\n                <main>\n                    {errorbar}\n                    {infobar}\n                    <SignIn switchToMainGame={this.switchToMainGame}\n                            switchToSignUp={this.switchToSignUp}\n                            switchToLogin={this.switchToLogin}\n                            currentUser={this.currentUser}\n                            clientGameSocket={this.clientGameSocket}\n                            getUserInfo={this.getUserInfo}\n                            handleError={this.handleError}\n                            handleInfo={this.handleInfo}\n                    />\n                </main>\n            );\n        } else if (state === \"signup\") {\n\n            return (\n                <main>\n\n                    {errorbar}\n                    {infobar}\n                    <SignUp\n                        switchToMainGame={this.switchToMainGame}\n                        switchToSignUp={this.switchToSignUp}\n                        switchToLogin={this.switchToLogin}\n                        currentUser={this.currentUser}\n                        clientGameSocket={this.clientGameSocket}\n                        getUserInfo={this.getUserInfo}\n                        handleError={this.handleError}\n                        handleInfo={this.handleInfo}\n\n                    />\n                </main>);\n        } else if (state === \"maingame\") {\n\n            return (\n                <main>\n                    {errorbar}\n                    {infobar}\n                    <MainGame switchToLogin={this.switchToLogin}\n                              switchToProfile={this.switchToProfile}\n                              currentUser={this.currentUser}\n                              clientGameSocket={this.clientGameSocket}\n                              getUserInfo={this.getUserInfo}\n                              game={this.game}\n                              handleError={this.handleError}\n                              handleInfo={this.handleInfo}\n\n\n                    /></main>\n            );\n        } else if (state === \"profile\") {\n            return (\n                <main>\n\n                    {errorbar}\n                    {infobar}\n                    <Profile switchToMainGame={this.switchToMainGame}\n                             switchToLogin={this.switchToLogin}\n                             currentUser={this.currentUser}\n                             clientGameSocket={this.clientGameSocket}\n                             getUserInfo={this.getUserInfo}\n                             handleError={this.handleError}\n                             handleInfo={this.handleInfo}\n                    />\n                </main>\n            );\n        }\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}